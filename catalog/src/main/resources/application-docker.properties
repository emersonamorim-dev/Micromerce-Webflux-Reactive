# Docker-specific configurations
spring.kafka.bootstrap-servers=kafka:9092
spring.r2dbc.url=r2dbc:postgresql://postgres:5432/catalogDB
spring.data.redis.host=redis
spring.data.elasticsearch.cluster-nodes=elasticsearch:9200

# Network timeouts and retry configurations
spring.kafka.producer.properties.request.timeout.ms=20000
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.consumer.properties.session.timeout.ms=45000
spring.kafka.consumer.properties.heartbeat.interval.ms=15000

# Connection pool settings
spring.r2dbc.pool.max-idle-time=30m
spring.r2dbc.pool.validation-query=SELECT 1
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=2

# Health check configurations
management.health.kafka.enabled=true
management.health.redis.enabled=true
management.health.db.enabled=true
management.endpoint.health.show-details=always

# Logging for troubleshooting
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.data.elasticsearch=WARN
logging.level.org.springframework.data.redis=WARN
logging.level.io.r2dbc=WARN
